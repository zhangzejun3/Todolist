{"version":3,"sources":["TodoInput.js","TodoItem.js","App.js","localStore.js","index.js"],"names":["TodoInput","this","input","focus","_this","react_default","a","createElement","type","value","props","content","onKeyPress","submit","bind","onChange","changeTitle","ref","placeholder","e","key","onSubmit","Component","TodoItem","className","checked","todo","status","toggle","title","onClick","delete","onToggle","onDelete","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","newTodo","todoList","console","log","JSON","parse","window","localStorage","getItem","setItem","stringify","_this2","todos","filter","item","deleted","map","index","src_TodoItem","src_TodoInput","addTodo","event","setState","push","id","target","length","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9884a1a7.chunk.js","sourcesContent":["import React,{Component} from 'react'\n\nclass TodoInput extends Component{\n    componentDidMount(){\n        this.input.focus()\n    }\n    componentDidUpdate(){\n        this.input.focus()\n    }\n    render(){\n        return(\n            <input type='text' value={this.props.content}\n            onKeyPress={this.submit.bind(this)}\n            onChange={this.changeTitle.bind(this)}\n            ref={(input)=>{this.input = input}}\n            placeholder='在此输入'/>\n        )\n    }\n    submit(e){\n        if(e.key ==='Enter'){\n            this.props.onSubmit(e)       \n        }\n    }\n    changeTitle(e){\n        this.props.onChange(e)\n    }\n}\n\nexport default TodoInput","import React, { Component } from 'react'\n\nclass TodoItem extends Component {\n    render() {\n        return (\n            <div className=\"itemWrapper\">\n                <input type=\"checkbox\" \n                checked={this.props.todo.status === 'completed'}\n                    onChange={this.toggle.bind(this)} />\n                <span>{this.props.todo.title}</span>\n                <button onClick={this.delete.bind(this)}>删除</button>\n            </div>\n        )\n    }\n    toggle(e){\n        this.props.onToggle(e,this.props.todo)\n    }\n    delete(e){\n        this.props.onDelete(e,this.props.todo)\n    }\n}\n\nexport default TodoItem\n","import React, { Component } from 'react'\nimport './App.css'\nimport 'normalize.css'\nimport './reset.css'\nimport TodoInput from './TodoInput'\nimport TodoItem from './TodoItem'\nimport * as localStore from './localStore'\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            newTodo: '',\n            todoList: localStore.load('todoList')||[]\n        }\n    }\n    componentDidUpdate(){\n        localStore.save('todoList', this.state.todoList)\n    }\n    render() {\n        let todos = this.state.todoList\n        .filter((item)=>!item.deleted)\n        .map((item, index) => {\n            return <TodoItem todo={item} key={index}\n            onToggle={this.toggle.bind(this)}\n            onDelete={this.delete.bind(this)}/>\n        })\n        return (\n            <div className='App'>\n                <h1>Todos</h1>\n                <div className=\"inputWrapper\">\n                <TodoInput content={this.state.newTodo}\n                onSubmit={this.addTodo.bind(this)}\n                onChange={(this.changeTitle.bind(this))}/>\n                </div>\n                <ol>\n                    {todos}\n                </ol>\n            </div>\n        )\n    }\n    delete(event,todo){\n        todo.deleted = true\n        this.setState(this.state)\n    }\n    toggle(e,todo){\n        todo.status = todo.status==='completed'?'':'completed'\n        this.setState(this.state)\n    }\n    addTodo(event){\n        let todoList = this.state.todoList\n        todoList.push({\n            id:idMaker(),\n            title:event.target.value,\n            status:null,\n            deleted:false\n        })\n        this.setState({\n            newTodo:'',\n            todoList:todoList\n        })\n        console.log(todoList[todoList.length-1].title)\n    }\n    changeTitle(event){\n        this.setState({\n            newTodo:event.target.value,\n            todoList:this.state.todoList\n        })\n    }\n}\nlet id = 0\nfunction idMaker(){\n    id += 1\n    return id\n}\n\nexport default App","export function save(key,value){\r\n    console.log('save')\r\n    return window.localStorage.setItem(key,JSON.stringify(value))\r\n}\r\nexport function load(key){\r\n    console.log('load')\r\n    return JSON.parse(window.localStorage.getItem(key))\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}